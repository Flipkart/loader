/* JS disabled styles */  
.no-js nav li:hover ul { display:block; }  
  
/* base nav styles */  
nav { display:block; margin:0 auto 20px; border:0px solid #222; position:relative; background-color:#999999; font:16px Tahoma, Sans-serif; }  
nav ul { padding:0; margin:0; }  
nav li { position:relative; float:left; list-style-type:none; }  
nav ul:after { content:"."; display:block; height:0; clear:both; visibility:hidden; }  
nav li a { display:block; padding:10px 20px; border-left:0px solid #999; border-right:0px solid #222; color:#eee; text-decoration:none; }  
nav li div { display:block; padding:10px 20px; border-left:0px solid #999; border-right:0px solid #222; color:#eee; text-decoration:none; }
nav li a:focus { outline:none; text-decoration:underline; }
nav li:first-child a { border-left:none; }  
nav li.last a { border-right:none; }  
nav a span { display:block; float:rightright; margin-left:5px; }  
nav ul ul { display:none; width:100%; position:absolute; left:0; background:#999999; }  
nav ul ul li { float:none; }  
nav ul ul a { padding:5px 10px; border-left:none; border-right:none; font-size:14px; }  
nav ul ul a:hover { background-color:#555; }  
Save this file in the css directory as nav.css. The first rule is purely for when JavaScript is disabled, and allows the hidden submenu to be displayed on hover purely with CSS. The rest of the code defines a set of base styles that format the <nav> menu in the way that we want without adding anything too decorative. Note that weâ€™re using the :after pseudo-selector to clear the floated list items; normally this would be added using a class name to that it could be applied to the containers of any floated elements on the page. At this point our page should look like this:  
/* CSS3 */  



